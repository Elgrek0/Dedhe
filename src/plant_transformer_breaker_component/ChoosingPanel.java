/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package plant_transformer_breaker_component;

import data_classes.Breaker;
import DB_data_loader.StaticCachedData;
import data_classes.PowerPlant;
import data_classes.Transformer;
import java.awt.event.ItemEvent;
import javax.swing.DefaultComboBoxModel;

/**
 *
 * @author Paris
 */
public final class ChoosingPanel extends javax.swing.JPanel {

    public PowerPlant selected_plant = null;
    public Transformer selected_transformer = null;
    public Breaker selected_breaker = null;

    public ChoosingPanel() {

        initComponents();
        setBounds(0, 0, 400, 70);

        refresh();

    }

    public void refresh() {
        update_plants();
        update_transformers();
        update_breakers();

    }

    void update_plants() {

        selected_plant = null;
        selected_transformer = null;
        selected_breaker = null;

        DefaultComboBoxModel plantcombobox = new DefaultComboBoxModel();
        plant_combobox.setModel(plantcombobox);

        StaticCachedData.lock();
        if (StaticCachedData.db_powerplants.size() > 0) {
            plantcombobox = new DefaultComboBoxModel(StaticCachedData.db_powerplants);
            plant_combobox.setModel(plantcombobox);
            plant_combobox.setSelectedIndex(0);
            selected_plant = (PowerPlant) plant_combobox.getSelectedItem();
        }
        StaticCachedData.unlock();
    }

    void update_transformers() {

        selected_transformer = null;
        selected_breaker = null;

        DefaultComboBoxModel transformercombobox = new DefaultComboBoxModel();
        transformer_combobox.setModel(transformercombobox);
        if (selected_plant != null) {
            StaticCachedData.lock();
            if (selected_plant.transformers.size() > 0) {

                transformercombobox = new DefaultComboBoxModel(selected_plant.transformers);
                transformer_combobox.setModel(transformercombobox);
                transformer_combobox.setSelectedIndex(0);
                selected_transformer = (Transformer) transformer_combobox.getSelectedItem();
            }
            StaticCachedData.unlock();
        }

    }

    void update_breakers() {

        selected_breaker = null;

        DefaultComboBoxModel breakercombobox = new DefaultComboBoxModel();
        breaker_combobox.setModel(breakercombobox);
        if (selected_transformer != null) {
            StaticCachedData.lock();
            if (selected_transformer.breakers.size() > 0) {

                breakercombobox = new DefaultComboBoxModel(selected_transformer.breakers);
                breaker_combobox.setModel(breakercombobox);
                breaker_combobox.setSelectedIndex(0);
                selected_breaker = (Breaker) breaker_combobox.getSelectedItem();
            }
            StaticCachedData.unlock();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    /*
     }*/
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        breaker_combobox = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        transformer_label = new javax.swing.JLabel();
        breaker_label = new javax.swing.JLabel();
        plant_combobox = new javax.swing.JComboBox();
        transformer_combobox = new javax.swing.JComboBox();

        jLabel1.setText("Plant");

        transformer_label.setText("Transformer");

        breaker_label.setText("Breaker");

        plant_combobox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                plant_comboboxItemStateChanged(evt);
            }
        });

        transformer_combobox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                transformer_comboboxItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(plant_combobox, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(98, 98, 98)
                        .addComponent(jLabel1)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(transformer_label)
                    .addComponent(transformer_combobox, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(breaker_combobox, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(43, 43, 43)
                        .addComponent(breaker_label)
                        .addGap(30, 30, 30)))
                .addGap(57, 57, 57))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(transformer_label, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1)
                        .addComponent(breaker_label)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(plant_combobox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(transformer_combobox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(breaker_combobox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(34, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void plant_comboboxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_plant_comboboxItemStateChanged
        if (evt.getStateChange() == ItemEvent.SELECTED) {
            selected_plant = (PowerPlant) plant_combobox.getSelectedItem();
            update_transformers();
            update_breakers();
        }
    }//GEN-LAST:event_plant_comboboxItemStateChanged

    private void transformer_comboboxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_transformer_comboboxItemStateChanged
        if (evt.getStateChange() == ItemEvent.SELECTED) {
            selected_transformer = (Transformer) transformer_combobox.getSelectedItem();
            update_breakers();
        }
    }//GEN-LAST:event_transformer_comboboxItemStateChanged

    private void breaker_comboboxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_breaker_comboboxItemStateChanged

    }//GEN-LAST:event_breaker_comboboxItemStateChanged


    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JComboBox breaker_combobox;
    private javax.swing.JLabel breaker_label;
    private javax.swing.JLabel jLabel1;
    public javax.swing.JComboBox plant_combobox;
    public javax.swing.JComboBox transformer_combobox;
    private javax.swing.JLabel transformer_label;
    // End of variables declaration//GEN-END:variables

}
